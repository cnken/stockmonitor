
function fomtime()
    {
    	 var nowtime =Date.parse(new Date());
    	 nowtime = parseInt(nowtime/1000);
    	 var lasttime = endtime - nowtime;

    	 if(lasttime<0)
    	 {
    	 	var docu = document.getElementsByClassName('p-limit');
    	 	var parent = docu.parentNode;
         parent.removeChild(docu);      
    	 }
    	 	
    	 var hours = parseInt(lasttime/3600);
    	 var min = parseInt((lasttime-hours*3600)/60);
    	 var seco = parseInt(lasttime%60);
    	 if(seco.length<2)
    	 	seco = '0'+seco;
    	 var str = hours+":"+min+":"+seco;
    	 document.getElementById("lasttime").innerHTML = str;
        setTimeout(function () {
        
        		fomtime();
        },1000);
    }
    
   function clearByClass(className) {
   	var elems = document.getElementsByClassName(className);
    	for (var k = elems.length - 1; k >= 0; k--) {
        	var parent = elems[k].parentNode;
        parent.removeChild(elems[k]);
    	}
   }

/** 
 * 串联加载指定的脚本
 * 串联加载[异步]逐个加载，每个加载完成后加载下一个
 * 全部加载完成后执行回调
 * @param array|string 指定的脚本们
 * @param function 成功后回调的函数
 * @return array 所有生成的脚本元素对象数组
 */
function seriesLoadScripts(scripts,callback) {
   if(typeof(scripts) != "object") var scripts = [scripts];
   var HEAD = document.getElementsByTagName("head").item(0) || document.documentElement;
   var s = new Array(), last = scripts.length - 1, recursiveLoad = function(i) {  //递归
       s[i] = document.createElement("script");
       s[i].setAttribute("type","text/javascript");
       s[i].onload = s[i].onreadystatechange = function() { //Attach handlers for all browsers
           if(!/*@cc_on!@*/0 || this.readyState == "loaded" || this.readyState == "complete") {
               this.onload = this.onreadystatechange = null; this.parentNode.removeChild(this); 
               if(i != last) recursiveLoad(i + 1); else if(typeof(callback) == "function") callback();
           }
       }
       if(typeof cdn_js_website != "undefined")
			       src_url = cdn_js_website+scripts[i];
		    else
			       src_url = scripts[i];
		  if(typeof ver != "undefined")	
			     src_url = src_url+'?v='+ver;	
       s[i].setAttribute("src",src_url);
       HEAD.appendChild(s[i]);
   };
   recursiveLoad(0);
}

/**
 * 并联加载指定的脚本
 * 并联加载[同步]同时加载，不管上个是否加载完成，直接加载全部
 * 全部加载完成后执行回调
 * @param array|string 指定的脚本们
 * @param function 成功后回调的函数
 * @return array 所有生成的脚本元素对象数组
 */ 
function parallelLoadScripts(scripts,callback) {
   if(typeof(scripts) != "object") var scripts = [scripts];
   var HEAD = document.getElementsByTagName("head").item(0) || document.documentElement, s = new Array(), loaded = 0;
   for(var i=0; i<scripts.length; i++) {
       s[i] = document.createElement("script");
       s[i].setAttribute("type","text/javascript");
       s[i].onload = s[i].onreadystatechange = function() { //Attach handlers for all browsers
           if(!/*@cc_on!@*/0 || this.readyState == "loaded" || this.readyState == "complete") {
               loaded++;
               this.onload = this.onreadystatechange = null; this.parentNode.removeChild(this); 
               if(loaded == scripts.length && typeof(callback) == "function") callback();
           }
       };
       if(typeof cdn_js_website != "undefined")
			     src_url = cdn_js_website+scripts[i];
		  else
			     src_url = scripts[i];
       s[i].setAttribute("src",src_url);
       HEAD.appendChild(s[i]);
   }
}


function setCookie(c_name, value, expiredays){
　　　var exdate=new Date();
　　　exdate.setDate(exdate.getDate() + expiredays);
　　　document.cookie=c_name+ "=" + escape(value) + ((expiredays==null) ? "" : ";expires="+exdate.toGMTString());
}

function getCookie(c_name){
　　　　if (document.cookie.length>0){　　//先查询cookie是否为空，为空就return ""
　　　　　　c_start=document.cookie.indexOf(c_name + "=")　　//通过String对象的indexOf()来检查这个cookie是否存在，不存在就为 -1　　
　　　　　　if (c_start!=-1){ 
　　　　　　　　c_start=c_start + c_name.length+1　　//最后这个+1其实就是表示"="号啦，这样就获取到了cookie值的开始位置
　　　　　　　　c_end=document.cookie.indexOf(";",c_start)　　//其实我刚看见indexOf()第二个参数的时候猛然有点晕，后来想起来表示指定的开始索引的位置...这句是为了得到值的结束位置。因为需要考虑是否是最后一项，所以通过";"号是否存在来判断
　　　　　　　　if (c_end==-1) c_end=document.cookie.length　　
　　　　　　　　return unescape(document.cookie.substring(c_start,c_end))　　//通过substring()得到了值。想了解unescape()得先知道escape()是做什么的，都是很重要的基础，想了解的可以搜索下，在文章结尾处也会进行讲解cookie编码细节
　　　　　　} 
　　　　}
　　　　return ""
}

function html_encode(str)   
{   
  var s = "";   
  if (str.length == 0) return "";   
  s = str.replace(/&/g, "&gt;");   
  s = s.replace(/</g, "&lt;");   
  s = s.replace(/>/g, "&gt;");   
  s = s.replace(/ /g, "&nbsp;");   
  s = s.replace(/\'/g, "&#39;");   
  s = s.replace(/\"/g, "&quot;");   
  s = s.replace(/\n/g, "<br>");   
  return s;   
}   
 
function html_decode(str)   
{   
  var s = "";   
  if (str.length == 0) return "";   
  s = str.replace(/&gt;/g, "&");   
  s = s.replace(/&lt;/g, "<");   
  s = s.replace(/&gt;/g, ">");   
  s = s.replace(/&nbsp;/g, " ");   
  s = s.replace(/&#39;/g, "\'");   
  s = s.replace(/&#039;/g, "\'");  
  s = s.replace(/&quot;/g, "\"");   
  s = s.replace(/<br>/g, "\n");   
  return s;   
}

function is_weixin(){
	var ua = navigator.userAgent.toLowerCase();
	if(ua.match(/MicroMessenger/i)=="micromessenger") {
		return true;
 	} else {
		return false;
	}
}

function getBrower()
{
		var Sys = {};
        var ua = navigator.userAgent.toLowerCase();
        var s;
        (s = ua.match(/msie ([\d.]+)/)) ? Sys.ie = s[1] :
        (s = ua.match(/firefox\/([\d.]+)/)) ? Sys.firefox = s[1] :
        (s = ua.match(/chrome\/([\d.]+)/)) ? Sys.chrome = s[1] :
        (s = ua.match(/opera.([\d.]+)/)) ? Sys.opera = s[1] :
        (s = ua.match(/version\/([\d.]+).*safari/)) ? Sys.safari = s[1] : 0;
        return Sys;
}

function updateUrl(url,key){
        var key= (key || 't') +'=';  //默认是"t"
        var reg=new RegExp(key+'\\d+');  //正则：t=1472286066028
        var timestamp=+new Date();
        if(url.indexOf(key)>-1){ //有时间戳，直接更新
            return url.replace(reg,key+timestamp);
        }else{  //没有时间戳，加上时间戳
            if(url.indexOf('\?')>-1){
                var urlArr=url.split('\?');
                if(urlArr[1]){
                    return urlArr[0]+'?'+key+timestamp+'&'+urlArr[1];
                }else{
                    return urlArr[0]+'?'+key+timestamp;
                }
            }else{
                if(url.indexOf('#')>-1){
                    return url.split('#')[0]+'?'+key+timestamp+location.hash;
                }else{
                    return url+'?'+key+timestamp;
                }
            }
        }
    }

/**
* 设置或读取localstorage
* 
* @param {}
*            key 只有key的时候，取值
* @param {}
*            value 设置值
* @return {}
*/
function localCache(key, value) {
        if (window.localStorage) {
                if (arguments.length == 1) {
                        var value = window.localStorage.getItem(arguments[0])
                        return value;
                } else {
                        if (arguments.length == 2) {
                                window.localStorage.removeItem(arguments[0]);
                                return window.localStorage.setItem(arguments[0], arguments[1]);
                        }
                }
        } else {
                alert('不支持localStorage');
        }
}